package org.xhh.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class ActivityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table activity
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table activity
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table activity
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public ActivityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public ActivityExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public ActivityExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        ActivityExample example = new ActivityExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public ActivityExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbg.generated
     */
    public ActivityExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table activity
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andPlaceIsNull() {
            addCriterion("place is null");
            return (Criteria) this;
        }

        public Criteria andPlaceIsNotNull() {
            addCriterion("place is not null");
            return (Criteria) this;
        }

        public Criteria andPlaceEqualTo(String value) {
            addCriterion("place =", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andPlaceEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("place = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceNotEqualTo(String value) {
            addCriterion("place <>", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andPlaceNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("place <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceGreaterThan(String value) {
            addCriterion("place >", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andPlaceGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("place > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceGreaterThanOrEqualTo(String value) {
            addCriterion("place >=", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andPlaceGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("place >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLessThan(String value) {
            addCriterion("place <", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andPlaceLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("place < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLessThanOrEqualTo(String value) {
            addCriterion("place <=", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andPlaceLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("place <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLike(String value) {
            addCriterion("place like", value, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotLike(String value) {
            addCriterion("place not like", value, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceIn(List<String> values) {
            addCriterion("place in", values, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotIn(List<String> values) {
            addCriterion("place not in", values, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceBetween(String value1, String value2) {
            addCriterion("place between", value1, value2, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotBetween(String value1, String value2) {
            addCriterion("place not between", value1, value2, "place");
            return (Criteria) this;
        }

        public Criteria andImagesIndexIsNull() {
            addCriterion("images_index is null");
            return (Criteria) this;
        }

        public Criteria andImagesIndexIsNotNull() {
            addCriterion("images_index is not null");
            return (Criteria) this;
        }

        public Criteria andImagesIndexEqualTo(String value) {
            addCriterion("images_index =", value, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexNotEqualTo(String value) {
            addCriterion("images_index <>", value, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexGreaterThan(String value) {
            addCriterion("images_index >", value, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexGreaterThanOrEqualTo(String value) {
            addCriterion("images_index >=", value, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexLessThan(String value) {
            addCriterion("images_index <", value, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexLessThanOrEqualTo(String value) {
            addCriterion("images_index <=", value, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexLike(String value) {
            addCriterion("images_index like", value, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexNotLike(String value) {
            addCriterion("images_index not like", value, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexIn(List<String> values) {
            addCriterion("images_index in", values, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexNotIn(List<String> values) {
            addCriterion("images_index not in", values, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexBetween(String value1, String value2) {
            addCriterion("images_index between", value1, value2, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIndexNotBetween(String value1, String value2) {
            addCriterion("images_index not between", value1, value2, "imagesIndex");
            return (Criteria) this;
        }

        public Criteria andImagesIsNull() {
            addCriterion("images is null");
            return (Criteria) this;
        }

        public Criteria andImagesIsNotNull() {
            addCriterion("images is not null");
            return (Criteria) this;
        }

        public Criteria andImagesEqualTo(String value) {
            addCriterion("images =", value, "images");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImagesNotEqualTo(String value) {
            addCriterion("images <>", value, "images");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImagesGreaterThan(String value) {
            addCriterion("images >", value, "images");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImagesGreaterThanOrEqualTo(String value) {
            addCriterion("images >=", value, "images");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImagesLessThan(String value) {
            addCriterion("images <", value, "images");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImagesLessThanOrEqualTo(String value) {
            addCriterion("images <=", value, "images");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImagesLike(String value) {
            addCriterion("images like", value, "images");
            return (Criteria) this;
        }

        public Criteria andImagesNotLike(String value) {
            addCriterion("images not like", value, "images");
            return (Criteria) this;
        }

        public Criteria andImagesIn(List<String> values) {
            addCriterion("images in", values, "images");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesIndexLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images_index <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesIndexLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images_index < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesIndexGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images_index >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesIndexGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images_index > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesIndexNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images_index <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andImagesIndexEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("images_index = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImagesNotIn(List<String> values) {
            addCriterion("images not in", values, "images");
            return (Criteria) this;
        }

        public Criteria andImagesBetween(String value1, String value2) {
            addCriterion("images between", value1, value2, "images");
            return (Criteria) this;
        }

        public Criteria andImagesNotBetween(String value1, String value2) {
            addCriterion("images not between", value1, value2, "images");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("`type` =", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTypeEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`type` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("`type` <>", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTypeNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`type` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("`type` >", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`type` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("`type` >=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`type` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("`type` <", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`type` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("`type` <=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("`type` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("`type` like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("`type` not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andIsplayIsNull() {
            addCriterion("isplay is null");
            return (Criteria) this;
        }

        public Criteria andIsplayIsNotNull() {
            addCriterion("isplay is not null");
            return (Criteria) this;
        }

        public Criteria andIsplayEqualTo(String value) {
            addCriterion("isplay =", value, "isplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIsplayEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("isplay = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsplayNotEqualTo(String value) {
            addCriterion("isplay <>", value, "isplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIsplayNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("isplay <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsplayGreaterThan(String value) {
            addCriterion("isplay >", value, "isplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIsplayGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("isplay > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsplayGreaterThanOrEqualTo(String value) {
            addCriterion("isplay >=", value, "isplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIsplayGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("isplay >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsplayLessThan(String value) {
            addCriterion("isplay <", value, "isplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIsplayLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("isplay < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsplayLessThanOrEqualTo(String value) {
            addCriterion("isplay <=", value, "isplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andIsplayLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("isplay <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsplayLike(String value) {
            addCriterion("isplay like", value, "isplay");
            return (Criteria) this;
        }

        public Criteria andIsplayNotLike(String value) {
            addCriterion("isplay not like", value, "isplay");
            return (Criteria) this;
        }

        public Criteria andIsplayIn(List<String> values) {
            addCriterion("isplay in", values, "isplay");
            return (Criteria) this;
        }

        public Criteria andIsplayNotIn(List<String> values) {
            addCriterion("isplay not in", values, "isplay");
            return (Criteria) this;
        }

        public Criteria andIsplayBetween(String value1, String value2) {
            addCriterion("isplay between", value1, value2, "isplay");
            return (Criteria) this;
        }

        public Criteria andIsplayNotBetween(String value1, String value2) {
            addCriterion("isplay not between", value1, value2, "isplay");
            return (Criteria) this;
        }

        public Criteria andSortIsNull() {
            addCriterion("sort is null");
            return (Criteria) this;
        }

        public Criteria andSortIsNotNull() {
            addCriterion("sort is not null");
            return (Criteria) this;
        }

        public Criteria andSortEqualTo(Integer value) {
            addCriterion("sort =", value, "sort");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andSortEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("sort = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortNotEqualTo(Integer value) {
            addCriterion("sort <>", value, "sort");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andSortNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("sort <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortGreaterThan(Integer value) {
            addCriterion("sort >", value, "sort");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andSortGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("sort > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("sort >=", value, "sort");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andSortGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("sort >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortLessThan(Integer value) {
            addCriterion("sort <", value, "sort");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andSortLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("sort < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortLessThanOrEqualTo(Integer value) {
            addCriterion("sort <=", value, "sort");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andSortLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("sort <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortIn(List<Integer> values) {
            addCriterion("sort in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotIn(List<Integer> values) {
            addCriterion("sort not in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortBetween(Integer value1, Integer value2) {
            addCriterion("sort between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotBetween(Integer value1, Integer value2) {
            addCriterion("sort not between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andTerritoryIsNull() {
            addCriterion("territory is null");
            return (Criteria) this;
        }

        public Criteria andTerritoryIsNotNull() {
            addCriterion("territory is not null");
            return (Criteria) this;
        }

        public Criteria andTerritoryEqualTo(String value) {
            addCriterion("territory =", value, "territory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritoryEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritoryNotEqualTo(String value) {
            addCriterion("territory <>", value, "territory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritoryNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritoryGreaterThan(String value) {
            addCriterion("territory >", value, "territory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritoryGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritoryGreaterThanOrEqualTo(String value) {
            addCriterion("territory >=", value, "territory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritoryGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritoryLessThan(String value) {
            addCriterion("territory <", value, "territory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritoryLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritoryLessThanOrEqualTo(String value) {
            addCriterion("territory <=", value, "territory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritoryLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritoryLike(String value) {
            addCriterion("territory like", value, "territory");
            return (Criteria) this;
        }

        public Criteria andTerritoryNotLike(String value) {
            addCriterion("territory not like", value, "territory");
            return (Criteria) this;
        }

        public Criteria andTerritoryIn(List<String> values) {
            addCriterion("territory in", values, "territory");
            return (Criteria) this;
        }

        public Criteria andTerritoryNotIn(List<String> values) {
            addCriterion("territory not in", values, "territory");
            return (Criteria) this;
        }

        public Criteria andTerritoryBetween(String value1, String value2) {
            addCriterion("territory between", value1, value2, "territory");
            return (Criteria) this;
        }

        public Criteria andTerritoryNotBetween(String value1, String value2) {
            addCriterion("territory not between", value1, value2, "territory");
            return (Criteria) this;
        }

        public Criteria andTerritory2IsNull() {
            addCriterion("territory2 is null");
            return (Criteria) this;
        }

        public Criteria andTerritory2IsNotNull() {
            addCriterion("territory2 is not null");
            return (Criteria) this;
        }

        public Criteria andTerritory2EqualTo(String value) {
            addCriterion("territory2 =", value, "territory2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritory2EqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritory2NotEqualTo(String value) {
            addCriterion("territory2 <>", value, "territory2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritory2NotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritory2GreaterThan(String value) {
            addCriterion("territory2 >", value, "territory2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritory2GreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritory2GreaterThanOrEqualTo(String value) {
            addCriterion("territory2 >=", value, "territory2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritory2GreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritory2LessThan(String value) {
            addCriterion("territory2 <", value, "territory2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritory2LessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritory2LessThanOrEqualTo(String value) {
            addCriterion("territory2 <=", value, "territory2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andTerritory2LessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("territory2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTerritory2Like(String value) {
            addCriterion("territory2 like", value, "territory2");
            return (Criteria) this;
        }

        public Criteria andTerritory2NotLike(String value) {
            addCriterion("territory2 not like", value, "territory2");
            return (Criteria) this;
        }

        public Criteria andTerritory2In(List<String> values) {
            addCriterion("territory2 in", values, "territory2");
            return (Criteria) this;
        }

        public Criteria andTerritory2NotIn(List<String> values) {
            addCriterion("territory2 not in", values, "territory2");
            return (Criteria) this;
        }

        public Criteria andTerritory2Between(String value1, String value2) {
            addCriterion("territory2 between", value1, value2, "territory2");
            return (Criteria) this;
        }

        public Criteria andTerritory2NotBetween(String value1, String value2) {
            addCriterion("territory2 not between", value1, value2, "territory2");
            return (Criteria) this;
        }

        public Criteria andCreateidIsNull() {
            addCriterion("createid is null");
            return (Criteria) this;
        }

        public Criteria andCreateidIsNotNull() {
            addCriterion("createid is not null");
            return (Criteria) this;
        }

        public Criteria andCreateidEqualTo(String value) {
            addCriterion("createid =", value, "createid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreateidEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateidNotEqualTo(String value) {
            addCriterion("createid <>", value, "createid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreateidNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateidGreaterThan(String value) {
            addCriterion("createid >", value, "createid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreateidGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateidGreaterThanOrEqualTo(String value) {
            addCriterion("createid >=", value, "createid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreateidGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateidLessThan(String value) {
            addCriterion("createid <", value, "createid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreateidLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateidLessThanOrEqualTo(String value) {
            addCriterion("createid <=", value, "createid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreateidLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateidLike(String value) {
            addCriterion("createid like", value, "createid");
            return (Criteria) this;
        }

        public Criteria andCreateidNotLike(String value) {
            addCriterion("createid not like", value, "createid");
            return (Criteria) this;
        }

        public Criteria andCreateidIn(List<String> values) {
            addCriterion("createid in", values, "createid");
            return (Criteria) this;
        }

        public Criteria andCreateidNotIn(List<String> values) {
            addCriterion("createid not in", values, "createid");
            return (Criteria) this;
        }

        public Criteria andCreateidBetween(String value1, String value2) {
            addCriterion("createid between", value1, value2, "createid");
            return (Criteria) this;
        }

        public Criteria andCreateidNotBetween(String value1, String value2) {
            addCriterion("createid not between", value1, value2, "createid");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(LocalDateTime value) {
            addCriterion("createtime =", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createtime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(LocalDateTime value) {
            addCriterion("createtime <>", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createtime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(LocalDateTime value) {
            addCriterion("createtime >", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createtime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("createtime >=", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createtime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(LocalDateTime value) {
            addCriterion("createtime <", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createtime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("createtime <=", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("createtime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<LocalDateTime> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<LocalDateTime> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andUpdateidIsNull() {
            addCriterion("updateid is null");
            return (Criteria) this;
        }

        public Criteria andUpdateidIsNotNull() {
            addCriterion("updateid is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateidEqualTo(String value) {
            addCriterion("updateid =", value, "updateid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdateidEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updateid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateidNotEqualTo(String value) {
            addCriterion("updateid <>", value, "updateid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdateidNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updateid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateidGreaterThan(String value) {
            addCriterion("updateid >", value, "updateid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdateidGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updateid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateidGreaterThanOrEqualTo(String value) {
            addCriterion("updateid >=", value, "updateid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdateidGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updateid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateidLessThan(String value) {
            addCriterion("updateid <", value, "updateid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdateidLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updateid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateidLessThanOrEqualTo(String value) {
            addCriterion("updateid <=", value, "updateid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdateidLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updateid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateidLike(String value) {
            addCriterion("updateid like", value, "updateid");
            return (Criteria) this;
        }

        public Criteria andUpdateidNotLike(String value) {
            addCriterion("updateid not like", value, "updateid");
            return (Criteria) this;
        }

        public Criteria andUpdateidIn(List<String> values) {
            addCriterion("updateid in", values, "updateid");
            return (Criteria) this;
        }

        public Criteria andUpdateidNotIn(List<String> values) {
            addCriterion("updateid not in", values, "updateid");
            return (Criteria) this;
        }

        public Criteria andUpdateidBetween(String value1, String value2) {
            addCriterion("updateid between", value1, value2, "updateid");
            return (Criteria) this;
        }

        public Criteria andUpdateidNotBetween(String value1, String value2) {
            addCriterion("updateid not between", value1, value2, "updateid");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNull() {
            addCriterion("updatetime is null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNotNull() {
            addCriterion("updatetime is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeEqualTo(LocalDateTime value) {
            addCriterion("updatetime =", value, "updatetime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdatetimeEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updatetime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotEqualTo(LocalDateTime value) {
            addCriterion("updatetime <>", value, "updatetime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdatetimeNotEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updatetime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThan(LocalDateTime value) {
            addCriterion("updatetime >", value, "updatetime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdatetimeGreaterThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updatetime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("updatetime >=", value, "updatetime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdatetimeGreaterThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updatetime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThan(LocalDateTime value) {
            addCriterion("updatetime <", value, "updatetime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdatetimeLessThanColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updatetime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("updatetime <=", value, "updatetime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria andUpdatetimeLessThanOrEqualToColumn(Activity.Column column) {
            addCriterion(new StringBuilder("updatetime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIn(List<LocalDateTime> values) {
            addCriterion("updatetime in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotIn(List<LocalDateTime> values) {
            addCriterion("updatetime not in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("updatetime between", value1, value2, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("updatetime not between", value1, value2, "updatetime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table activity
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table activity
         *
         * @mbg.generated
         */
        private ActivityExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        protected Criteria(ActivityExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public ActivityExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table activity
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table activity
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table activity
         *
         * @mbg.generated
         */
        void example(org.xhh.db.domain.ActivityExample example);
    }
}